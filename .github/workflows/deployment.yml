# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: ZyDraw deployment to Amazon ECS

on:
    push:
        branches:
            - main
env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: zydraw
    ECS_SERVICE: zydraw-frontend-service
    ECS_CLUSTER: zydraw-cluster
    ECS_TASK_DEFINITION: task-definition.json
    ECS_TASK_DEFINITION_NAME: zydraw-frontend-task-def
    CONTAINER_NAME: zydraw-frontend

jobs:
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        environment: STAGING

        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v1
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ env.AWS_REGION }}
            
            - name: Create DOTENV from AWS Secret Manager
              id: generate-dotenv-secret-manager
              run: aws secretsmanager get-secret-value --secret-id ${{ secrets.SECRET_MANAGER }} | jq -r '.SecretString | fromjson | to_entries | map("\(.key)=\(.value|tostring)") | .[]' > .env.local

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v1
            
            - name: Build, tag, and push image to Amazon ECR
              id: build-image
              env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                IMAGE_TAG: ${{ github.sha }}
              run: |
                # Build a docker container and
                # push it to ECR so that it can
                # be deployed to ECS.
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

            - name: Download task definition
              id: download-task-definition
              run: |
               aws ecs describe-task-definition --task-definition $ECS_TASK_DEFINITION_NAME --query taskDefinition > $ECS_TASK_DEFINITION
            
            - name: Fill in the new image ID in the Amazon ECS task definition
              id: task-definition
              uses: aws-actions/amazon-ecs-render-task-definition@v1
              with:
                task-definition: ${{ env.ECS_TASK_DEFINITION }}
                container-name: ${{ env.CONTAINER_NAME }}
                image: ${{ steps.build-image.outputs.image }}
            
            - name: Deploy Amazon ECS task definition
              uses: aws-actions/amazon-ecs-deploy-task-definition@v1
              with:
                task-definition: ${{ steps.task-definition.outputs.task-definition }}
                service: ${{ env.ECS_SERVICE }}
                cluster: ${{ env.ECS_CLUSTER }}
                wait-for-service-stability: true

            